#+TITLE: Configuration

Environment variables to configure environments

* Emacs

| Variables       | Description                                                  | Default |
|-----------------+--------------------------------------------------------------+---------|
| =EMACSLOADPATH= | colon string array path for Emacs to load configuration from | =""=    |

* Humacs

| Variables        | Description               | Default |
|------------------+---------------------------+---------|
| =HUMACS_PROFILE= | the Humacs profile to use | =ii=    |


* Humacs in Docker

*** Simple-Init.sh
This script handles bringing up the environment for pairing.
It ensures the SSH_AUTH_SOCK is set, prepares the home folder, clones all the repos that are declared, and finally sets up a tmate session with Emacs running inside it.

| Variable                    | Description                                            | Default                           |
|-----------------------------+--------------------------------------------------------+-----------------------------------|
| =HUMACS_DEBUG=              | ~set -x~ debug on shell blocks                         | =false=                           |
| =GIT_AUTHOR_EMAIL=          | (required) the default email to use for commits        | =""=                              |
| =GIT_AUTHOR_NAME=           | (required) the default name to use for commits         | =""=                              |
| =GIT_COMMITER_EMAIL=        | (required) the default email to use for commits        | =""=                              |
| =GIT_COMMITER_NAME=         | (required) the default name to use for commits         | =""=                              |
| =TMATE_SOCKET=              | the default tmate socket to use for creating sessions  | =/tmp/ii.default.target.iisocket= |
| =TMATE_SOCKET_NAME=         | the name of the socket file                            | =ii.default.target.iisocket=      |
| =INIT_ORG_FILE=             | the initial file/folder to load when bringing up Emacs | =~/=                              |
| =INIT_DEFAULT_DIR=          | the default directory to open shells in                | =~/=                              |
| =INIT_DEFAULT_REPOS=        | spaced string array of default repos to clone          | =""=                              |
| =INIT_DEFAULT_REPOS_FOLDER= | the location of where to clone repos                   | ="/home/ii"=                      |
| =INIT_PREFINISH_BLOCK=      | a shell block to execute (after repos are clone)       | =""=                              |
| =REINIT_HOME_FOLDER=        | copy =/etc/skel= over =/home/ii=                       | =""=                              |

*** k8s-service-ingress-port-bind-reconciler.sh
This script watches for ports listening on all interfaces and reconciles them into Kubernetes Services and Ingresses for use in [[https://github.com/sharingio/pair][Pair instances]].

| Variable                                             | Description             | Default |
|------------------------------------------------------+-------------------------+---------|
| =SHARINGIO_PAIR_DISABLE_SVC_INGRESS_BIND_RECONCILER= | Disables the reconciler | =""=    |

Note: requires to be running Humacs inside of a Kubernetes cluster -

* Kubernetes (Helm)

| Parameter                   | Description                                                     | Default                                  |
|-----------------------------+-----------------------------------------------------------------+------------------------------------------|
| options.profile             | Humacs profile to use                                           | =ii=                                     |
| options.hostDockerSocket    | mount in the Docker socket from the host system                 | =false=                                  |
| options.hostTmp             | mount in the tmp dir of the host system                         | =false=                                  |
| options.gitName             | set the git name for the user account                           | =""=                                     |
| options.gitEmail            | set the git email for the user account                          | =""=                                     |
| options.repos               | array of repo URLs                                              | =[]=                                     |
| options.workingDirectory    | the default directory for new shells                            | =/home/ii=                               |
| options.workingFile         | the initial file or folder to load in Emacs                     | =/home/ii=                               |
| options.preinitScript       | a shell block to execute after cloning repos                    | =(echo 'Welcome to Humacs')=             |
| extraEnvVars                | declare extra environment variables                             |                                          |
| image.repository            | the repo where the image lives                                  | registry.gitlab.com/humacs/humacs/humacs |
| image.tag                   | specifies a tag of from the image to use                        | 2020.09.09                               |
| image.pullPolicy            | Humacs container pull policy                                    | IfNotPresent                             |
| imagePullSecrets            | references for the registry secrets to pull Humacs from         | =[]=                                     |
| nameOverride                | expand the name of the chart                                    | =""=                                     |
| fullNameOverride            | create a FQDN for the app name                                  | =""=                                     |
| serviceAccount.create       | whether a serviceAccount should be created for the Pod to use   | =true=                                   |
| serviceAccount.name         | a name to give the servce account                               | =nil=                                    |
| clusterRoleBinding.create   | where a clusterRoleBinding should be created for the Pod to use | =true=                                   |
| clusterRoleBinding.roleName | a name to give the clusterRoleBinding                           | =cluster-admin=                          |
| podSecurityContext          | Set a security context for the Pod                              | ={}=                                     |
| labels                      | declare labels for all resources                                | ={}=                                     |
| annotations                 | declare annotations for all resources                           | ={}=                                     |
| resources                   | limits and requests for the Pods                                | ={}=                                     |
| nodeSelector                | delcare the node labels for Pod scheduling                      | ={}=                                     |
| tolerations                 | declare the toleration labels for Pod scheduling                | =[]=                                     |
| affinity                    | declare the affinity settings for the Pod scheduling            | ={}=                                     |
| extraVolumes                | declare the extra volumes to use within the Pod                 | ={}=                                     |
| extraVolumesMounts          | declare the extra volume mounts for the Pod                     | ={}=                                     |
